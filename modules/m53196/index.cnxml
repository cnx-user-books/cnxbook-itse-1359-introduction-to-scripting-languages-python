<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Itse1359-2410-Getting Started with Skulpt</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m53196</md:content-id>
  <md:title>Itse1359-2410-Getting Started with Skulpt</md:title>
  <md:abstract>This module introduces an in-browser Python programming environment named Skulpt.</md:abstract>
  <md:uuid>d28b8c4d-dfa6-4c49-a071-56fd68d7cb31</md:uuid>
</metadata>

<content>
















<section id="h11000">
<title>
<emphasis id="Table_of_contents" effect="bold">

Table of contents

</emphasis>


</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1002">
<link id="a1002" target-id="Figures">

Figures

</link>


</item>


			

<item id="li1003">
<link id="a1003" target-id="Listings">

Listings

</link>


</item>


		

</list>


		

</item>


	

</list>


	

</item>




	

<item id="li1004">
<link id="a1004" target-id="Discussion">

Discussion

</link>


<list id="ul1003" list-type="bulleted">

		

<item id="li1005">
<link id="a1005" target-id="The_Python_code">

The Python code

</link>


</item>


		

<item id="li1006">
<link id="a1006" target-id="The_drawing_canvas">

The drawing canvas

</link>


</item>


	

</list>


	

</item>



	

<item id="li1007">
<link id="a1007" target-id="Run_the_program">

Run the program

</link>


</item>


	

<item id="li1008">
<link id="a1008" target-id="Complete_HTML_file_listing">

Complete HTML file listing

</link>


</item>



	

<item id="li1009">
<link id="a1009" target-id="Miscellaneous">

Miscellaneous

</link>


</item>





</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules on Python designed for 
teaching 

<emphasis id="em1000" effect="italics">
ITSE 1359 Introduction to Scripting Languages: Python

</emphasis>
 at Austin Community 
College in Austin, TX. This module introduces an in-browser programming 
	environment named 

<link id="a1010" url="http://www.skulpt.org/">

Skulpt

</link>

.

</para>


	
	

<section id="h21000">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1001">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures 
and Listings while you are reading about them.

</para>


	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">

		

<item id="li1010">
<link id="a1011" target-id="Figure_1">

Figure 1.

</link>

 Initial web page output. 

</item>


		

<item id="li1011">
<link id="a1012" target-id="Figure_2">

Figure 2.

</link>

 Updated web page output.

</item>



	

</list>


	

</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>


	

<list id="ul1005" list-type="bulleted">

		

<item id="li1012">
<link id="a1013" target-id="Listing_1">

Listing 1.

</link>

 The Python code. 

</item>


		

<item id="li1013">
<link id="a1014" target-id="Listing_2">

Listing 2.

</link>

 The drawing canvas. 

</item>


		

<item id="li1014">
<link id="a1015" target-id="Listing_3">

Listing 3.

</link>

 HTML file template. 

</item>



	

</list>



	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="Discussion" effect="bold">

Discussion

</emphasis>


</title>


	
	

<para id="p1002">
The purpose of this module is to introduce you to a Python programming 
	environment named 

<link id="a1016" url="http://www.skulpt.org/">

Skulpt

</link>

. Skulpt is an in-browser implementation of Python 
	that lets you write and execute Python code completely within your browser.

No preprocessing, plugins, or server-side support is required. Also, it is not 
	necessary to have Python installed locally on your computer.

</para>




<para id="p1003">
I will leave it to your creativity to decide what you can do with this 
capability. One example might be to practice your programming skills using a 
computer that doesn't have Python installed or a computer that still has Python 
2.x installed.

</para>




<para id="p1004">
An outstanding example is the use of 

<link id="a1017" url="http://www.skulpt.org/">

Skulpt

</link>

 
as the technology behind the 

<emphasis id="strong1000" effect="bold">
ActiveCode

</emphasis>
 windows in the online 
interactive textbook titled


<link id="a1018" url="http://interactivepython.org/courselib/static/thinkcspy/GeneralIntro/SpecialWaystoExecutePythoninthisBook.html">


How To Think Like a Computer Scientist

</link>

.

</para>




<para id="p1005">
<link id="a1019" target-id="Figure_1">

Figure 1

</link>

 shows the initial output produced by opening the HTML 
file 
shown in 

<link id="a1020" target-id="Listing_3">

Listing 3

</link>

 in a Firefox or Chrome browser.

</para>




<para id="p1006">
The top box in 

<link id="a1021" target-id="Figure_1">

Figure 1

</link>

 shows the code for a small Python program 
that uses the 


<emphasis id="strong1001" effect="bold">
turtle

</emphasis>
 graphics module. This Python code is embedded in the HTML file shown in 

<link id="a1022" target-id="Listing_3">

Listing 3

</link>

. The bottom box in 

<link id="a1023" target-id="Figure_1">

Figure 1

</link>

 shows the output produced by 
clicking the 

<emphasis id="strong1002" effect="bold">
Run

</emphasis>
 button below the code on the web page.

</para>






<para id="p1007">
<emphasis id="strong1003" effect="bold">
<emphasis id="Figure_1" effect="bold">

Figure 1.

</emphasis>

 Initial web page output.

</emphasis>
</para>




<para id="p1008">
<media id="media1000" alt="missing image" display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/itse1359-2410-a.jpg" width="437" height="600"/>
</media>


</para>





<para id="p1009">
<link id="a1024" target-id="Figure_2">

Figure 2

</link>

 shows the output produced by adding three more lines 
of code to the 
program in the top box and clicking the 

<emphasis id="strong1004" effect="bold">
Run

</emphasis>
 button again. The new code caused 
the orange sloping line to appear at the bottom of the output.

</para>





<para id="p1010">
<emphasis id="strong1005" effect="bold">
<emphasis id="Figure_2" effect="bold">

Figure 2.

</emphasis>

 Updated web page output.

</emphasis>
</para>




<para id="p1011">
<media id="media1001" alt="missing image" display="block">
<image id="img1001" mime-type="image/jpeg" src="../../media/itse1359-2410-b.jpg" width="431" height="593"/>
</media>


</para>





<para id="p1012">
Note that editing the code in the top box does not modify the code in the original HTML 
file. The next time the HTML file is loaded, the state of the page will have 
returned to that shown in 

<link id="a1025" target-id="Figure_1">

Figure 1

</link>

.

</para>




<para id="p1013">
An HTML template for using this capability is provided in 

<link id="a1026" target-id="Listing_3">

Listing 3

</link>

. I 
will leave it as an exercise for the student to understand all of the code in 
the listing to the extent that is necessary. In this module, I will concentrate 
on the only two parts of the HTML code that need to be modified to use this 
capability.

</para>




<section id="h21001">
<title>
<emphasis id="The_Python_code" effect="bold">

The Python code

</emphasis>


</title>




<para id="p1014">
<link id="a1027" target-id="Listing_1">

Listing 1

</link>

 shows the proper location for any "seed" code that you might want 
to include in the HTML file. This seed code will appear in the web page and can 
be 

<emphasis id="strong1006" effect="bold">
Run

</emphasis>
 and/or edited when the file is opened in a browser.

</para>





<table id="table1000" summary="This is a table." pgwide="677">
<tgroup cols="1">


<thead id="thead1000">
<row id="tr1000">



<entry id="th1000">
<emphasis id="Listing_1" effect="bold">

Listing 1.

</emphasis>

 The Python code.


</entry>
</row>
</thead>


<tbody id="tbody1000">
<row id="tr1001">
<entry id="td1000">



<code id="pre1000" display="block">&lt;textarea id="yourcode" cols="40" rows="10"&gt;

import turtle
t = turtle.Turtle()
t.color("red")
t.goto(-100,100)
t.color("green")
t.forward(100)
t.right(90)
t.color("blue")
t.forward(200)

&lt;/textarea&gt;</code>




</entry>
</row>
</tbody>


</tgroup>
</table>




<para id="p1015">
Another option is to leave the 

<emphasis id="strong1007" effect="bold">
textarea

</emphasis>
 element empty and 
enter any code that you want to run after you open the HTML file in the browser.

</para>




</section>
<section id="h21002">
<title>
<emphasis id="The_drawing_canvas" effect="bold">

The drawing canvas

</emphasis>


</title>




<para id="p1016">
Because this program uses the 

<emphasis id="strong1008" effect="bold">
turtle

</emphasis>
 module to draw on the 
screen, it needs an HTML 

<emphasis id="strong1009" effect="bold">
canvas

</emphasis>
 object on which to draw. The code 
in 

<link id="a1028" target-id="Listing_2">

Listing 2

</link>

 causes the 

<emphasis id="strong1010" effect="bold">
canvas

</emphasis>
 to appear as the bottom box in 


<link id="a1029" target-id="Figure_1">

Figure 1

</link>

.

</para>




<table id="table1001" summary="This is a table." pgwide="677">
<tgroup cols="1">


<thead id="thead1001">
<row id="tr1002">



<entry id="th1001">
<emphasis id="Listing_2" effect="bold">

Listing 2.

</emphasis>

 The drawing canvas.

</entry>
</row>
</thead>


<tbody id="tbody1001">
<row id="tr1003">
<entry id="td1001">



<code id="pre1001" display="block">&lt;canvas id="mycanvas" width="210" height="210" 
style="border:1px solid #000000;"&gt;&lt;/canvas&gt;</code>




</entry>
</row>
</tbody>


</tgroup>
</table>




<para id="p1017">
If your Python code simply produces text as its output, you can omit the


<emphasis id="strong1011" effect="bold">
canvas

</emphasis>
.

</para>





</section>
</section>
<section id="h11003">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>





<para id="p1018">
I encourage you to copy the HTML code from 

<link id="a1030" target-id="Listing_3">

Listing 3

</link>

 into a text file with 
an extension of .html. Open the file in your browser. Click the 

<emphasis id="strong1012" effect="bold">
RUN

</emphasis>
 
button and confirm 
that you get the same results as those shown in 

<link id="a1031" target-id="Figure_1">

Figure 1

</link>

. Make the changes shown 
in the Python code, click the 

<emphasis id="strong1013" effect="bold">
Run

</emphasis>
 button again, and confirm 
that you get the same results as those shown in 

<link id="a1032" target-id="Figure_2">

Figure 2

</link>

.

</para>




<para id="p1019">
Experiment with the Python code, 
making further changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>




</section>
<section id="h11004">
<title>
<emphasis id="Complete_HTML_file_listing" effect="bold">

Complete HTML file listing

</emphasis>


</title>




<para id="p1020">
A complete listing of the HTML template is provided in 

<link id="a1033" target-id="Listing_3">

Listing 3

</link>

.

</para>





<para id="p1021">
<emphasis id="strong1014" effect="bold">
<emphasis id="Listing_3" effect="bold">

Listing 3.

</emphasis>

 HTML file template.


</emphasis>
</para>





<code id="pre1002" display="block">&lt;html&gt;
&lt;head&gt;
&lt;script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="skulpt.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="skulpt-stdlib.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js" type="text/javascript"&gt;&lt;/script&gt; 
&lt;script src="http://www.skulpt.org/static/skulpt.min.js" type="text/javascript"&gt;&lt;/script&gt; 
&lt;script src="http://www.skulpt.org/static/skulpt-stdlib.js" type="text/javascript"&gt;&lt;/script&gt; 
 
&lt;/head&gt;
 
&lt;body&gt;
 
&lt;script type="text/javascript"&gt;
// output functions are configurable. This one just appends some text
// to a pre element.
function outf(text) {
var mypre = document.getElementById("output");
mypre.innerHTML = mypre.innerHTML + text;
}
function builtinRead(x) {
if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
throw "File not found: '" + x + "'";
return Sk.builtinFiles["files"][x];
}
// Here's everything you need to run a python program in skulpt
// grab the code from your textarea
// get a reference to your pre element for output
// configure the output function
// call Sk.importMainWithBody()
function runit() {
var prog = document.getElementById("yourcode").value;
var mypre = document.getElementById("output");
mypre.innerHTML = '';
Sk.canvas = "mycanvas";
Sk.pre = "output";
Sk.configure({output:outf, read:builtinRead});
try {
eval(Sk.importMainWithBody("&lt;stdin&gt;",false,prog));
}
catch(e) {
alert(e.toString())
}
}
&lt;/script&gt;
 
&lt;h3&gt;&lt;h3&gt;Edit and run the following code&lt;/h3&gt;&lt;/h3&gt;
&lt;form&gt;
&lt;textarea id="yourcode" cols="40" rows="10"&gt;

import turtle
t = turtle.Turtle()
t.color("red")
t.goto(-100,100)
t.color("green")
t.forward(100)
t.right(90)
t.color("blue")
t.forward(200)

&lt;/textarea&gt;
&lt;br /&gt;
&lt;button type="button" onclick="runit()"&gt;Run&lt;/button&gt;
&lt;/form&gt;
&lt;pre id="output" &gt;
&lt;/pre&gt;
&lt;!-- If you want turtle graphics include a canvas --&gt;
&lt;canvas id="mycanvas" width="210" height="210" 
style="border:1px solid #000000;"&gt;&lt;/canvas&gt;
 
&lt;/body&gt;
 
&lt;/html&gt;</code>





	

</section>
<section id="h11005">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1022">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1015" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1006" list-type="bulleted">

					

<item id="li1015">
Module name: Itse1359-2410-Getting Started with Skulpt

</item>


					

<item id="li1016">
File: Itse1359-2410.htm


</item>


					

<item id="li1017">
Published: 01/08/15

</item>




<item id="li1018">
Revised: 02/08/16

</item>


				

</list>


</note>






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1016" effect="bold">
Disclaimers:

</emphasis>
<para id="p1023">
<emphasis id="strong1017" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1024">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1025">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1026">
<emphasis id="strong1018" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


</note>



	


<para id="p1027">
-end- 

</para>






</section>
</content>




</document>