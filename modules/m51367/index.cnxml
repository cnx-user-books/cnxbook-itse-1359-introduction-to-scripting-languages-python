<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Itse1359-1100-Indexing and Slicing Tuples</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m51367</md:content-id>
  <md:title>Itse1359-1100-Indexing and Slicing Tuples</md:title>
  <md:abstract>This module and several modules that follow will use sample programs to show you a variety of ways to manipulate and use tuples.</md:abstract>
  <md:uuid>59b92f58-fa74-4624-a37a-37ab2794536a</md:uuid>
</metadata>

<content>
















<section id="h11000">
<title>
Table of contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1002">
<link id="a1002" target-id="Figures">

Figures

</link>


</item>


			

<item id="li1003">
<link id="a1003" target-id="Listings">

Listings

</link>


</item>



		

</list>


		

</item>


	

</list>


	

</item>



	

<item id="li1004">
 

<link id="a1004" target-id="Introduction">

Introduction

</link>


</item>


	

<item id="li1005">
 

<link id="a1005" target-id="WhatIsatuple">

What is a tuple?

</link>


<list id="ul1003" list-type="bulleted">

		

<item id="li1006">
<link id="a1006" target-id="Description_of_a_tuple">

Description of a tuple

</link>


</item>


		

<item id="li1007">
<link id="a1007" target-id="An_array_of_references_">

An array of references 

</link>

 

</item>


		

<item id="li1008">
<link id="a1008" target-id="What_can_you_do_with_a_tuple">

What can you do with a tuple? 
		

</link>

 

</item>


		

<item id="li1009">
<link id="a1009" target-id="Why_do_tuples_exist">

Why do tuples exist? 

</link>

 

</item>


	

</list>


	

</item>


	

<item id="li1010">
 

<link id="a1010" target-id="ASampleProgram">

A sample program

</link>


<list id="ul1004" list-type="bulleted">

		

<item id="li1011">
<link id="a1011" target-id="Indexing_and_slicing_tuples">

Indexing and slicing tuples

</link>


</item>


		

<item id="li1012">
<link id="a1012" target-id="The_program_output">

The program output

</link>


</item>


		

<item id="li1013">
<link id="a1013" target-id="Tuple_syntax_">

Tuple syntax 

</link>

 

</item>


		

<item id="li1014">
<link id="a1014" target-id="Indexing_items_in_a_tuple">

Indexing items in a tuple

</link>


</item>


		

<item id="li1015">
<link id="a1015" target-id="Tuples_can_be_sliced_">

Tuples can be sliced 

</link>

 

</item>


	

</list>


	

</item>


	

<item id="li1016">
<link id="a1016" target-id="CompleteProgramListing">

Complete program listing

</link>


</item>



	

<item id="li1017">
<link id="a1017" target-id="Run_the_program">

Run the program

</link>


</item>



	

<item id="li1018">
<link id="a1018" target-id="Miscellaneous">

Miscellaneous

</link>


</item>






</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules on Python designed for 
teaching 

<emphasis id="em1000" effect="italics">
ITSE 1359 Introduction to Scripting Languages: Python

</emphasis>
 at Austin Community 
College in Austin, TX.

</para>


	

<section id="h21000">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1001">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures and the Listings 
while you are reading about them.

</para>




<para id="p1002">
<emphasis id="em1001" effect="italics">
(Note to blind and visually impaired students: most of the Figures and all of the Listings in 
this module are presented in plain text format and should be accessible using an 
audio screen reader or a braille display.)

</emphasis>
</para>


	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1005" list-type="bulleted">


		

<item id="li1019">
<link id="a1019" target-id="Figure_1">

Figure 1

</link>

. Visualization of a tuple.

</item>


		

<item id="li1020">
<link id="a1020" target-id="Figure_2">

Figure 2

</link>

. Output from code in Listing 6.

</item>



	

</list>




</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1006" list-type="bulleted">

		

<item id="li1021">
<link id="a1021" target-id="Listing_1">

Listing 1

</link>

. Beginning of the program. 

</item>


		

<item id="li1022">
<link id="a1022" target-id="Listing_2">

Listing 2

</link>

. Tuple code with parentheses removed.

</item>


		

<item id="li1023">
<link id="a1023" target-id="Listing_3">

Listing 3

</link>

. Indexing items in a tuple.

</item>


		

<item id="li1024">
<link id="a1024" target-id="Listing_4">

Listing 4

</link>

. Printing a short slice from a tuple.

</item>


		

<item id="li1025">
<link id="a1025" target-id="Listing_5">

Listing 5

</link>

. Print the entire tuple.

</item>


		

<item id="li1026">
<link id="a1026" target-id="Listing_6">

Listing 6

</link>

. Complete program listing.

</item>





</list>


	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="Introduction" effect="bold">

Introduction

</emphasis>


</title>




<para id="p1003">
Previous modules have introduced you to lists, subscriptions, sequences, 
mutable sequences, mappings, slicings, and have mentioned tuples. 

</para>




<para id="p1004">
Those modules showed you some of the ways that you can manipulate lists. 
The discussion was illustrated using sample programs. 

</para>




<para id="p1005">
The introduction to tuples in previous modules was very brief. This 
and several future modules will use sample programs to show you a variety of ways 
to manipulate and use tuples. 

</para>




</section>
<section id="h11003">
<title>
<emphasis id="WhatIsatuple" effect="bold">

What is a tuple

</emphasis>

?

</title>




<section id="h21001">
<title>
<emphasis id="Description_of_a_tuple" effect="bold">

Description of a tuple

</emphasis>


</title>




<para id="p1006">
As a practical matter, a tuple is like a list whose values cannot be 
modified. In other words, a tuple is 

<emphasis id="em1002" effect="italics">
immutable

</emphasis>
.

</para>




<para id="p1007">
According to Lutz and Ascher, Learning Python from O'Reilly, tuples are 

<emphasis id="em1003" effect="italics">

"Ordered collections of arbitrary objects."

</emphasis>
 

</para>




<para id="p1008">
Again according to Lutz and Ascher, 

<emphasis id="em1004" effect="italics">
"They work exactly like lists, except 
that tuples can't be changed in place (they're immutable)..."

</emphasis>
 

</para>




<para id="p1009">
Unlike lists, however, tuples don't use square brackets for containment. 
Rather, they are normally written as a sequence of items contained in 
parentheses. 

</para>




<para id="p1010">
Like a string or a list, a tuple is a 

<emphasis id="em1005" effect="italics">
sequence

</emphasis>
. Like a string 


<emphasis id="em1006" effect="italics">
(but unlike a list)

</emphasis>
, a tuple is an 

<emphasis id="em1007" effect="italics">
immutable

</emphasis>
 sequence. 

</para>




<para id="p1011">
Tuples can contain other compound objects, including lists, dictionaries, and 
other tuples. Hence, tuples can be nested. 

</para>




</section>
<section id="h21002">
<title>
<emphasis id="An_array_of_references_" effect="bold">

An array of references 

</emphasis>

 

</title>




<para id="p1012">
One way to think of a tuple is to consider it to be an array of references to 
other objects. 

</para>




<para id="p1013">
For example, 

<link id="a1027" target-id="Figure_1">

Figure 1

</link>

 shows a


<link id="a1028" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 
of the tuple from 

<link id="a1029" target-id="Listing_6">

Listing 6

</link>

. As you can see, each 
element in the tuple object at the bottom right contains a reference or a 
pointer to another object.

</para>





<para id="p1014">
<emphasis id="strong1000" effect="bold">
<emphasis id="Figure_1" effect="bold">

Figure 1.

</emphasis>

 Visualization of a tuple.

</emphasis>
</para>




<para id="p1015">
<media id="media1000" alt="Visualization of a tuple." display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/1359-1100a.jpg" width="852" height="296"/>
</media>


</para>








<para id="p1016">
While the tuple itself cannot be changed in place, the values contained in 
the objects that are referred to by the contents of the tuple can be changed 

<emphasis id="em1008" effect="italics">
(assuming that those 
objects are mutable)

</emphasis>
. 

</para>




</section>
<section id="h21003">
<title>
<emphasis id="What_can_you_do_with_a_tuple" effect="bold">

What can you do with a tuple

</emphasis>

? 


</title>




<para id="p1017">
You can do just about anything with a tuple that you can do with a list, 
taking into account the fact that the tuple is 

<emphasis id="em1009" effect="italics">
immutable

</emphasis>
. 
Therefore, those list operations that change the value of a list in place cannot 
be performed on a tuple. For example, you cannot call the 

<emphasis id="strong1001" effect="bold">
append

</emphasis>
 
method on a tuple as you can on a list.

</para>




<para id="p1018">
As with strings and lists, items in a tuple are 
accessed using a numeric index. The first item in a tuple is at index value 
0. 

</para>




</section>
<section id="h21004">
<title>
<emphasis id="Why_do_tuples_exist" effect="bold">

Why do tuples exist

</emphasis>

? 

</title>




<para id="p1019">
Tuples provide some degree of integrity to the data stored in them. You 
can pass a tuple around through a program and be confident that its value can't 
be accidentally changed. As mentioned earlier, however, the values stored in the 
items referred to in a tuple can be changed. 

</para>




<para id="p1020">
In addition, in a future module, you will see some sample programs that 
require the use of tuples. 

</para>




</section>
</section>
<section id="h11004">
<title>
<emphasis id="ASampleProgram" effect="bold">

A sample program

</emphasis>


</title>




<section id="h21005">
<title>
<emphasis id="Indexing_and_slicing_tuples" effect="bold">

Indexing and slicing tuples

</emphasis>


</title>




<para id="p1021">
<link id="a1030" target-id="Listing_1">

Listing 1

</link>

 shows the beginning of a 
Python program that first creates, and then manipulates a simple tuple. 

</para>


	

<table id="table1000" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

. Beginning of the 
				program.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">



<code id="pre1000" display="block">
# Illustrates indexing and slicing a simple tuple
#------------------------------------------------

print("Create a simple tuple")
aTuple = (3.14,59,"A string",1024)
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1022">
The remainder of this program will be shown and discussed as code 
fragments in subsequent Listings. The entire program is shown in 

<link id="a1031" target-id="Listing_6">

Listing 6

</link>

 near the end 
of the module. 

</para>




</section>
<section id="h21006">
<title>
<emphasis id="The_program_output" effect="bold">

The program output

</emphasis>


</title>




<para id="p1023">
At this point, I am going to show you the output produced by executing the 
program so that you 
will have it available for reference during the discussion that follows. The 
output from the code in 

<link id="a1032" target-id="Listing_6">

Listing 6

</link>

 is shown in 

<link id="a1033" target-id="Figure_2">

Figure 2

</link>

.

</para>


	

<table id="table1001" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="Figure_2" effect="bold">

Figure 2

</emphasis>

. Output from code in 
				Listing 6.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">



<code id="pre1001" display="block">
Create a simple tuple
Print index value 2
A string
Print a short slice
(3.14, 59, 'A string')
Print the entire tuple
(3.14, 59, 'A string', 1024)
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






</section>
<section id="h21007">
<title>
<emphasis id="Tuple_syntax_" effect="bold">

Tuple syntax 

</emphasis>

 

</title>




<para id="p1024">
From a syntax viewpoint, you create a tuple by placing a sequence of items 
inside a pair of enclosing parentheses and separating them by commas.

</para>




<quote id="blockquote1000" display="block">
Note 
that the parentheses can be omitted when such omission will not lead to 
ambiguity. 

</quote>




<para id="p1025">
The fragment in 

<link id="a1034" target-id="Listing_1">

Listing 1

</link>

 creates a 
simple four-item tuple and assigns it to the variable named 

<emphasis id="strong1002" effect="bold">
aTuple

</emphasis>
. 

</para>




<para id="p1026">
Note that the items in a tuple can be different types. This simple 
tuple contains a float, an integer, a string, and another integer. 

</para>




<para id="p1027">
In this case, the parentheses could be omitted from the tuple syntax, because 
such omission would not lead to ambiguity. 

<link id="a1035" target-id="Listing_2">

Listing 2

</link>

 shows what this code fragment 
would look like if the parentheses were omitted.

</para>




	

<table id="table1002" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="Listing_2" effect="bold">

Listing 2

</emphasis>

. Tuple code with 
				parentheses removed.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">



<code id="pre1002" display="block">
# Illustrates indexing and slicing a simple tuple
#------------------------------------------------

print("Create a simple tuple")
aTuple = 3.14,59,"A string",1024

</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1028">
The code fragments in 

<link id="a1036" target-id="Listing_1">

Listing 1

</link>

 and


<link id="a1037" target-id="Listing_2">

Listing 2

</link>

 are operationally identical 
and produce the same output, as shown in 

<link id="a1038" target-id="Figure_2">

Figure 2

</link>

. 

</para>




</section>
<section id="h21008">
<title>
<emphasis id="Indexing_items_in_a_tuple" effect="bold">

Indexing items in a tuple

</emphasis>


</title>




<para id="p1029">
The items in a tuple can be accessed using an index enclosed in square 
brackets as shown in 

<link id="a1039" target-id="Listing_3">

Listing 3

</link>

. 

<emphasis id="em1010" effect="italics">
(Earlier modules showed how to use an 
index in square brackets to access the items in a list.)

</emphasis>
 

</para>


	

<table id="table1003" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1003">

			

<row id="tr1006">

				

<entry id="th1003">
<emphasis id="Listing_3" effect="bold">

Listing 3

</emphasis>

. Indexing items in a 
				tuple.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1003">

			

<row id="tr1007">

				

<entry id="td1003">



<code id="pre1003" display="block">
print("Print index value 2")
print(aTuple[2])
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1030">
The third item in the tuple is accessed and printed in


<link id="a1040" target-id="Listing_3">

Listing 3

</link>

. 

<emphasis id="em1011" effect="italics">
(Remember, index 
values begin with the value 0, so index value 2 points to the third item in the 
tuple.)

</emphasis>
 

</para>




<para id="p1031">
The second and third lines of text in 

<link id="a1041" target-id="Figure_2">

Figure 2

</link>

 were produced by the code in 


<link id="a1042" target-id="Listing_3">

Listing 3

</link>

. 

</para>




</section>
<section id="h21009">
<title>
<emphasis id="Tuples_can_be_sliced_" effect="bold">

Tuples can be sliced 

</emphasis>

 

</title>




<para id="p1032">
Tuples can be sliced just like lists and strings. 
This is illustrated by the code in 

<link id="a1043" target-id="Listing_4">

Listing 4

</link>

.

</para>


	

<table id="table1004" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1004">

			

<row id="tr1008">

				

<entry id="th1004">
<emphasis id="Listing_4" effect="bold">

Listing 4

</emphasis>

. Printing a short 
				slice from a tuple.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1004">

			

<row id="tr1009">

				

<entry id="td1004">



<code id="pre1004" display="block">
print("Print a short slice")
print(aTuple[0:3])
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1033">
The code in 

<link id="a1044" target-id="Listing_4">

Listing 4

</link>

 uses a slice to access and print the first three items in the 
tuple. 

<emphasis id="em1012" effect="italics">
(Remember, a slice begins with the index shown by the first 
specified value and ends with the index whose value is one less than the second 
specified value.)

</emphasis>
 

</para>




<para id="p1034">
The output produced by the code in 

<link id="a1045" target-id="Listing_4">

Listing 4

</link>

 is shown by the fourth and fifth 
lines of text in


<link id="a1046" target-id="Figure_2">

Figure 2

</link>

. 

</para>




<para id="p1035">
Finally, the code fragment in 

<link id="a1047" target-id="Listing_5">

Listing 5

</link>

 
causes the entire tuple to be accessed and printed, as shown by the last two 
lines of text in 

<link id="a1048" target-id="Figure_2">

Figure 2

</link>

. 

</para>


	

<table id="table1005" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1005">

			

<row id="tr1010">

				

<entry id="th1005">
<emphasis id="Listing_5" effect="bold">

Listing 5

</emphasis>

. Print the entire 
				tuple.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1005">

			

<row id="tr1011">

				

<entry id="td1005">



<code id="pre1005" display="block">
print("Print the entire tuple")
print(aTuple[:100])
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>







</section>
</section>
<section id="h11005">
<title>
<emphasis id="CompleteProgramListing" effect="bold">

Complete program listing

</emphasis>


</title>




<para id="p1036">
A complete listing of the program is shown in 

<link id="a1049" target-id="Listing_6">

Listing 6

</link>

.

</para>














	

<table id="table1006" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1006">

			

<row id="tr1012">

				

<entry id="th1006">
<emphasis id="Listing_6" effect="bold">

Listing 6

</emphasis>

. Complete program 
				listing.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1006">

			

<row id="tr1013">

				

<entry id="td1006">



<code id="pre1006" display="block">
# Illustrates indexing and slicing a simple tuple
#------------------------------------------------

print("Create a simple tuple")
aTuple = (3.14,59,"A string",1024)
print("Print index value 2")
print(aTuple[2])
print("Print a short slice")
print(aTuple[0:3])
print("Print the entire tuple")
print(aTuple[:100])
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>







</section>
<section id="h11006">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>





<para id="p1037">
I encourage you to copy the code from 

<link id="a1050" target-id="Listing_6">

Listing 6

</link>

. Execute the code and confirm 
that you get the same results as those shown in 

<link id="a1051" target-id="Figure_2">

Figure 2

</link>

. Experiment with the code, 
making changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>


	

</section>
<section id="h11007">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1038">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1003" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1007" list-type="bulleted">

					

<item id="li1027">
Module name: Itse1359-1100-Indexing and Slicing Tuples

</item>


					

<item id="li1028">
File: Itse1359-1100.htm


</item>


					

<item id="li1029">
Published: 10/19/14

</item>


					

<item id="li1030">
Revised: 01/31/16

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1004" effect="bold">
Disclaimers:

</emphasis>
<para id="p1039">
<emphasis id="strong1005" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1040">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1041">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1042">
<emphasis id="strong1006" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	





<para id="p1043">
-end- 

</para>






</section>
</content>




</document>