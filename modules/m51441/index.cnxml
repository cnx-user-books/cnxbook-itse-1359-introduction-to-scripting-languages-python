<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Itse1359-1270-Functions</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m51441</md:content-id>
  <md:title>Itse1359-1270-Functions</md:title>
  <md:abstract>This module explains the basics of defining and calling functions in Python.</md:abstract>
  <md:uuid>4b3d1706-871d-4641-8c34-2a1d19b1b03c</md:uuid>
</metadata>

<content>
















<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="What_you_have_learned">

What you have learned

</link>


</item>


		

<item id="li1002">
<link id="a1002" target-id="What_you_will_learn">

What you will learn

</link>


</item>


		

<item id="li1003">
<link id="a1003" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1004">
<link id="a1004" target-id="Images">

Figures

</link>


</item>


			

<item id="li1005">
<link id="a1005" target-id="Listings">

Listings

</link>


</item>



		

</list>


		

</item>


	

</list>


	

</item>



	

<item id="li1006">
<link id="a1006" target-id="General_background_information">

General background information

</link>


</item>


	

<item id="li1007">
<link id="a1007" target-id="Discussion_and_sample_code">

Discussion and sample code

</link>


</item>


	

<item id="li1008">
<link id="a1008" target-id="Visualizing_a_simple_function">

Visualizing a simple function

</link>


</item>



	

<item id="li1009">
<link id="a1009" target-id="Run_the_program">

Run the program

</link>


</item>



	

<item id="li1010">
<link id="a1010" target-id="Miscellaneous">

Miscellaneous

</link>


</item>





</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules on Python designed for 
teaching 

<emphasis id="em1000" effect="italics">
ITSE 1359 Introduction to Scripting Languages: Python

</emphasis>
 at Austin Community 
College in Austin, TX.

</para>




<section id="h21000">
<title>
<emphasis id="What_you_have_learned" effect="bold">

What you have learned

</emphasis>


</title>




<para id="p1001">
So far under the general topic of 

<emphasis id="em1001" effect="italics">
control flow

</emphasis>
, you have learned how 
to construct 

<emphasis id="strong1000" effect="bold">
while

</emphasis>
 loops, 

<emphasis id="strong1001" effect="bold">
for

</emphasis>
 loops, and


<emphasis id="strong1002" effect="bold">
if

</emphasis>
 statements. In addition, you have learned

</para>




<list id="ul1003" list-type="bulleted">

	

<item id="li1011">
how to create 

<emphasis id="em1002" effect="italics">
nested loop structures

</emphasis>
,

</item>


	

<item id="li1012">
how to add an 

<emphasis id="strong1003" effect="bold">
else

</emphasis>
 clause to 

<emphasis id="strong1004" effect="bold">
while

</emphasis>
 loops 
and 

<emphasis id="strong1005" effect="bold">
for

</emphasis>
 loops, and

</item>


	

<item id="li1013">
how to use the loop modifiers: 

<emphasis id="strong1006" effect="bold">
continue

</emphasis>
 and 

<emphasis id="strong1007" effect="bold">
break

</emphasis>
.

</item>




</list>




</section>
<section id="h21001">
<title>
<emphasis id="What_you_will_learn" effect="bold">

What you will learn

</emphasis>


</title>




<para id="p1002">
This module will depart significantly from the above. In this module, you 
will learn the basics of defining and calling functions in Python.

</para>


	

</section>
<section id="h21002">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1003">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures 
	and the Listings 
while you are reading about them.

</para>




<para id="p1004">
<emphasis id="em1003" effect="italics">
(Note to blind and visually impaired students: most of the Figures and all of the 
Listings in 
this module are presented in plain text format and should be accessible using an 
audio screen reader or a braille display. Note however that the required 
indentation may not be properly represented by an audio screen reader.)

</emphasis>
</para>


	

<section id="h31000">
<title>
<emphasis id="Images" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">



<item id="li1014">
<link id="a1011" target-id="Image_1">

Figure 1

</link>

. Syntax for a Python function definition. 

</item>





<item id="li1015">
<link id="a1012" target-id="Image_3">

Figure 2

</link>

. Output produced by the code in Listing 1.

</item>


		

<item id="li1016">
<link id="a1013" target-id="Figure_3">

Figure 3

</link>

. Visualizing the code from Listing 
		1.

</item>


	

</list>




</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1005" list-type="bulleted">



<item id="li1017">
<link id="a1014" target-id="Image_2">

Listing 1

</link>

. A simple function named getRoot.

</item>




</list>


	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="General_background_information" effect="bold">

General 
	background information

</emphasis>


</title>




<para id="p1005">
According to


<link id="a1015" url="http://www.tutorialspoint.com/python/python_functions.htm">


tutorialspoint -- Python Functions

</link>


</para>




<quote id="blockquote1000" display="block">
A function is a block of organized, reusable code that is used to perform a single, related action. Functions provide better modularity for your application and a high degree of code reusing.

As you already know, Python gives you many built-in functions like print(), etc. but you can also create your own functions. These functions are called user-defined functions.

</quote>




<para id="p1006">
Again according to


<link id="a1016" url="http://www.tutorialspoint.com/python/python_functions.htm">


tutorialspoint

</link>

, 

<emphasis id="the_rules_for_defining" effect="bold">

the rules for defining

</emphasis>

 a basic function are as follows:

</para>




<list id="ul1006" list-type="bulleted">

	

<item id="li1018">
Function blocks begin with the keyword def followed by the function name and parentheses ( ( ) ).
	

</item>


	

<item id="li1019">
Any input parameters or arguments should be placed within these parentheses. You can also define parameters inside these parentheses.

    

</item>


	

<item id="li1020">
The first statement of a function can be an optional statement - the documentation string of the function or 
	

<emphasis id="docstring" effect="bold">

docstring

</emphasis>

.

    

</item>


	

<item id="li1021">
The code block within every function starts with a colon (:) and is indented.

    

</item>


	

<item id="li1022">
The statement return [expression] exits a function, optionally passing back an expression to the caller. A return statement with no arguments is the same as return None.
	

</item>




</list>


	

<para id="p1007">
The 

<link id="a1017" target-id="docstring">

docstring

</link>

 mentioned above is a string 
	literal. We will ignore the 

<emphasis id="em1004" effect="italics">
docstring

</emphasis>
 in this module. We will learn 
	about tools in a future module that use 

<emphasis id="em1005" effect="italics">
docstrings

</emphasis>
 to automatically 
	produce online or printed documentation.

</para>




<para id="p1008">
We will begin with these simple rules in this module. A future module 
	titled 


<link id="a1018" url="http://cnx.org/contents/15904262-d30b-45ed-ad84-9a6b117bc426">

Itse1359-1280-Function Arguments

</link>

 will get into more 
complicated material involving optional ways to define and use function 
arguments.

</para>




<para id="p1009">
The general syntax for a Python function definition is shown in 

<link id="a1019" target-id="Image_1">


Figure 1

</link>

.

</para>


	

<table id="table1000" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Image_1" effect="bold">

Figure 1

</emphasis>

. Syntax for a Python 
				function definition.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">




<code id="pre1000" display="block">
def name( parameters ):
  """optional docstring"""
  codeBlock
  optional return [expression]
</code>





				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>





	
	

</section>
<section id="h11003">
<title>
<emphasis id="Discussion_and_sample_code" effect="bold">

Discussion and sample code

</emphasis>


</title>


	
	

<para id="p1010">
A simple function named 

<emphasis id="strong1008" effect="bold">
getRoot

</emphasis>
 is defined and called in 
	

<link id="a1020" target-id="Image_2">

Listing 1

</link>

.

</para>


	

<table id="table1001" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="Image_2" effect="bold">

Listing 1

</emphasis>

. A simple function 
				named getRoot.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">




<code id="pre1001" display="block">
# Illustrates a simple function definition
#-----------------------------------------

def getRoot(number,root):
  """Returns the nth root of a number"""
  theRoot = number**(1/root)
  return theRoot
#End function definition

#Call the function
print("square root of 2")
print(getRoot(2,2))
print("cube root of 27")
print(getRoot(27,3))
print("eighth root of 256")
print(getRoot(256,8))
print("sixteenth root of 65536")
print(getRoot(65536,16))
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1011">
<link id="a1021" target-id="Image_3">

Figure 2

</link>

 shows the output produced by the code in 

<link id="a1022" target-id="Image_2">


	Listing 1

</link>

.

</para>




	

<table id="table1002" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="Image_3" effect="bold">

Figure 2

</emphasis>

. Output produced by 
				the code in Listing 1.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">




<code id="pre1002" display="block">
square root of 2
1.4142135623730951
cube root of 27
3.0
eighth root of 256
2.0
sixteenth root of 65536
2.0
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1012">
<link id="a1023" target-id="Image_2">

Listing 1

</link>

 defines a function that returns the nth root of a number. The 
	first parameter specifies the number for which the root is to be obtained. 
	The second parameter specifies which root is to be obtained.

</para>




<para id="p1013">
The function definition in 

<link id="a1024" target-id="Image_2">

Listing 1

</link>

 complies with each of the rules listed


<link id="a1025" target-id="the_rules_for_defining">

above

</link>

.

</para>




<para id="p1014">
You should have no difficulty understanding the body of the function shown in 


<link id="a1026" target-id="Image_2">

Listing 1

</link>

 provided that you understand how to use exponentiation to compute a root 
of a number. Otherwise, you may need to dust off your old high school algebra 
book and do some remedial study of algebra. 

</para>




<para id="p1015">
If you are content to define and use simple functions with simple argument 
lists as in 

<link id="a1027" target-id="Image_2">

Listing 1

</link>

, that is about all you need to know about 
Python functions. 
However, if you want to tap into the more-powerful capabilities of functions, 
you will need to study the module titled 


<link id="a1028" url="http://cnx.org/contents/15904262-d30b-45ed-ad84-9a6b117bc426">


Itse1359-1280-Function Arguments

</link>

 and possibly other modules as well.

</para>




</section>
<section id="h11004">
<title>
<emphasis id="Visualizing_a_simple_function" effect="bold">

Visualizing a simple function

</emphasis>


</title>




<para id="p1016">
<link id="a1029" target-id="Figure_3">

Figure 3

</link>

 shows a


<link id="a1030" url="http://pythontutor.com/visualize.html#mode=edit">

visualization

</link>

 of 
the code from 

<link id="a1031" target-id="Image_2">

Listing 1

</link>

, which defines a simple function 
named 

<emphasis id="strong1009" effect="bold">
getRoot

</emphasis>
 and calls it several times.

</para>





<para id="p1017">
<emphasis id="strong1010" effect="bold">
<emphasis id="Figure_3" effect="bold">

Figure 3.

</emphasis>

 Visualizing the code from Listing 1.

</emphasis>
</para>




<para id="p1018">
<media id="media1000" alt="Visualizing the code from Listing 1" display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/1359-1270a.jpg" width="802" height="687"/>
</media>


</para>





<para id="p1019">
The following options were selected when performing this visualization:

</para>




<list id="ol1000" list-type="enumerated">

	

<item id="li1023">
show exited frames (Python)

</item>


	

<item id="li1024">
render all objects on the heap

</item>


	

<item id="li1025">
draw pointers as arrows

</item>




</list>






<para id="p1020">
The first item in this list of options is what caused the four light gray 
occurrences of the calls to the 

<emphasis id="strong1011" effect="bold">
getRoot

</emphasis>
 function to be 
visible on the right in 

<link id="a1032" target-id="Figure_3">

Figure 3

</link>

. 

<emphasis id="em1006" effect="italics">
(If you were to 
change that option to "hide exited frames [default]", the diagram would show 
calls to the function while control is within the function but those calls would 
disappear when control leaves the function.)

</emphasis>
 The pointers 
associated with those occurrences point to the incoming parameter values and the 
return value for each call to the 

<emphasis id="strong1012" effect="bold">
getRoot

</emphasis>
 function.

</para>




<para id="p1021">
I recommend that you create a


<link id="a1033" url="http://pythontutor.com/visualize.html#mode=display">


visualization

</link>

 for the code in 

<link id="a1034" target-id="Image_2">

Listing 1

</link>

 and step 
through the program one instruction at a time. As you do that, pay attention to 
the movements of the red and green arrows on the left, the diagram on the right, 
and the printed material at the bottom. That should help you to better 
understand the behavior of Python programs containing functions that you define.

</para>





</section>
<section id="h11005">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>





<para id="p1022">
I encourage you to copy the code from 

<link id="a1035" target-id="Image_2">

Listing 1

</link>

. Execute the code and confirm 
that you get the same results as those shown in 

<link id="a1036" target-id="Image_3">

Figure 2

</link>

. Experiment with the code, 
making changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>


	

</section>
<section id="h11006">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1023">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1013" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1007" list-type="bulleted">

					

<item id="li1026">
Module name: Itse1359-1270-Functions 

</item>


					

<item id="li1027">
File: Itse1359-1270.htm


</item>


					

<item id="li1028">
Published: 10/26/14

</item>


					

<item id="li1029">
Revised: 01/31/16

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1014" effect="bold">
Disclaimers:

</emphasis>
<para id="p1024">
<emphasis id="strong1015" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1025">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1026">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1027">
<emphasis id="strong1016" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	





<para id="p1028">
-end- 

</para>






</section>
</content>




</document>